{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","todoList","activeItem","id","title","completed","editing","fetchTasks","bind","handleChange","handleSubmit","getCookie","startEdit","deleteItem","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","this","console","log","fetch","then","response","json","data","setState","e","target","value","preventDefault","csrftoken","url","method","headers","body","JSON","stringify","catch","error","task","tasks","self","className","onSubmit","style","flex","onChange","type","placeholder","map","index","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mPA8KeA,G,wDA1Kb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAU,GACVC,WAAY,CACVC,GAAG,KACHC,MAAM,GACNC,WAAU,GAEZC,SAAQ,GAEV,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,UAAY,EAAKA,UAAUH,KAAf,gBACjB,EAAKI,UAAY,EAAKA,UAAUJ,KAAf,gBACjB,EAAKK,WAAa,EAAKA,WAAWL,KAAhB,gBAhBD,E,sDAmBTM,GACR,IAAIC,EAAc,KAClB,GAAIC,SAASC,QAA8B,KAApBD,SAASC,OAE9B,IADA,IAAIC,EAAUF,SAASC,OAAOE,MAAM,KAC3BC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACvC,IAAIH,EAASC,EAAQE,GAAGE,OAExB,GAAIL,EAAOM,UAAU,EAAGT,EAAKO,OAAS,KAAQP,EAAO,IAAM,CACzDC,EAAcS,mBAAmBP,EAAOM,UAAUT,EAAKO,OAAS,IAChE,OAIN,OAAON,I,2CAIPU,KAAKlB,e,mCAGO,IAAD,OACXmB,QAAQC,IAAI,eAEZC,MAAM,sDACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OACR,EAAKC,SAAS,CACZhC,SAAU+B,S,mCAIHE,GACX,IAAIpB,EAAOoB,EAAEC,OAAOrB,KAChBsB,EAAQF,EAAEC,OAAOC,MACrBV,QAAQC,IAAI,QAASb,GACrBY,QAAQC,IAAI,SAAUS,GAEtBX,KAAKQ,SAAS,CACZ/B,WAAW,2BACNuB,KAAKzB,MAAME,YADN,IAERE,MAAMgC,Q,mCAKCF,GAAI,IAAD,OACdA,EAAEG,iBACFX,QAAQC,IAAI,QAASF,KAAKzB,MAAME,YAEhC,IAAIoC,EAAYb,KAAKd,UAAU,aAE3B4B,EAAM,uDAEe,GAAtBd,KAAKzB,MAAMM,UACZiC,EAAG,8DAA0Dd,KAAKzB,MAAME,WAAWC,GAAhF,KACHsB,KAAKQ,SAAS,CACZ3B,SAAQ,KAIZsB,MAAMW,EAAK,CACTC,OAAQ,OACRC,QAAQ,CACN,eAAgB,mBAChB,cAAeH,GAEjBI,KAAMC,KAAKC,UAAUnB,KAAKzB,MAAME,cAC/B2B,MAAK,SAACC,GACP,EAAKvB,aACL,EAAK0B,SAAS,CACZ/B,WAAY,CACVC,GAAG,KACHC,MAAM,GACNC,WAAU,QAGbwC,OAAM,SAASC,GAChBpB,QAAQC,IAAI,SAAUmB,Q,gCAIhBC,GACRtB,KAAKQ,SAAS,CACZ/B,WAAY6C,EACZzC,SAAS,M,iCAIFyC,GAAO,IAAD,OACXT,EAAYb,KAAKd,UAAU,aAE/BiB,MAAM,uDAAD,OAAwDmB,EAAK5C,GAA7D,KAAoE,CACvEqC,OAAQ,SACRC,QAAQ,CACN,eAAgB,mBAChB,cAAeH,KAEhBT,MAAK,SAACC,GACP,EAAKvB,kB,+BAKP,IAAIyC,EAAQvB,KAAKzB,MAAMC,SACnBgD,EAAOxB,KACX,OACE,qBAAKyB,UAAU,YAAf,SACE,sBAAK/C,GAAG,iBAAR,UAEE,qBAAKA,GAAG,eAAR,SACE,sBAAMgD,SAAU1B,KAAKf,aAAcP,GAAG,OAAtC,SACE,sBAAK+C,UAAU,eAAf,UACE,qBAAKE,MAAO,CAAEC,KAAM,GAApB,SACA,uBAAOC,SAAU7B,KAAKhB,aAAcyC,UAAU,eAAe/C,GAAG,QAAQiC,MAAOX,KAAKzB,MAAME,WAAWE,MAAOmD,KAAK,OAAOzC,KAAK,QAAQ0C,YAAY,iBAGjJ,qBAAKJ,MAAO,CAAEC,KAAM,GAApB,SACE,uBAAOlD,GAAG,SAAS+C,UAAU,kBAAkBK,KAAK,SAASzC,KAAK,iBAM1E,qBAAKX,GAAG,eAAR,SACG6C,EAAMS,KAAI,SAAUV,EAAMW,GACzB,OACE,sBAAiBR,UAAU,4BAA3B,UAEE,qBAAKE,MAAO,CAACC,KAAK,GAAlB,SACE,+BAAON,EAAK3C,UAGd,qBAAKgD,MAAO,CAACC,KAAK,GAAlB,SACE,wBAAQM,QAAS,kBAAMV,EAAKrC,UAAUmC,IAAOG,UAAU,8BAAvD,oBAGF,qBAAKE,MAAO,CAACC,KAAK,GAAlB,SACE,wBAAQM,QAAS,kBAAMV,EAAKpC,WAAWkC,IAAOG,UAAU,qCAAxD,mBAXMQ,iB,GAlJRE,IAAMC,YCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxD,SAASyD,eAAe,SAM1BX,M","file":"static/js/main.2b69fb34.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoList: [],\n      activeItem: {\n        id:null,\n        title:'',\n        completed:false,\n      },\n      editing:false,\n    }\n    this.fetchTasks = this.fetchTasks.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.getCookie = this.getCookie.bind(this)\n    this.startEdit = this.startEdit.bind(this)\n    this.deleteItem = this.deleteItem.bind(this)\n  };\n\n  getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      var cookies = document.cookie.split(';');\n      for (var i = 0; i < cookies.length; i++) {\n        var cookie = cookies[i].trim();\n        // Does this cookie string begin with the name we want?\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n\n  componentWillMount() {\n    this.fetchTasks()\n  }\n\n  fetchTasks() {\n    console.log('Fetching...')\n\n    fetch('http://drfserver.pythonanywhere.com/api/task-list/')\n    .then(response => response.json())\n    .then(data => \n      this.setState({\n        todoList: data\n      }))\n  }\n\n  handleChange(e){\n    var name = e.target.name\n    var value = e.target.value\n    console.log('Name:', name)\n    console.log('Value:', value)\n\n    this.setState({\n      activeItem:{\n        ...this.state.activeItem,\n        title:value\n      }\n    })\n  }\n\n  handleSubmit(e) {\n    e.preventDefault()\n    console.log('ITEM:', this.state.activeItem)\n\n    var csrftoken = this.getCookie('csrftoken')\n\n    var url = 'http://drfserver.pythonanywhere.com/api/task-create/'\n\n    if(this.state.editing == true){\n      url = `http://drfserver.pythonanywhere.com/api/task-update/${this.state.activeItem.id}/`\n      this.setState({\n        editing:false\n      })\n    }\n\n    fetch(url, {\n      method: 'POST',\n      headers:{\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n      body: JSON.stringify(this.state.activeItem)\n    }).then((response) => {\n      this.fetchTasks()\n      this.setState({\n        activeItem: {\n          id:null,\n          title:'',\n          completed:false,\n        }\n      })\n    }).catch(function(error){\n      console.log('ERROR:', error)\n    })\n  }\n\n  startEdit(task) {\n    this.setState({\n      activeItem: task,\n      editing: true,\n    })\n  }\n\n  deleteItem(task) {\n    var csrftoken = this.getCookie('csrftoken')\n\n    fetch(`http://drfserver.pythonanywhere.com/api/task-delete/${task.id}/`, {\n      method: 'DELETE',\n      headers:{\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n    }).then((response) =>{\n      this.fetchTasks()\n    })\n  }\n\n  render() {\n    var tasks = this.state.todoList\n    var self = this\n    return (\n      <div className=\"container\">\n        <div id=\"task-container\">\n\n          <div id=\"form-wrapper\">\n            <form onSubmit={this.handleSubmit} id=\"form\">\n              <div className=\"flex-wrapper\">\n                <div style={{ flex: 6 }}>\n                <input onChange={this.handleChange} className=\"form-control\" id=\"title\" value={this.state.activeItem.title} type=\"text\" name=\"title\" placeholder=\"Add task..\" />\n                </div>\n\n                <div style={{ flex: 1 }}>\n                  <input id=\"submit\" className=\"btn btn-warning\" type=\"submit\" name=\"Add\" />\n                </div>\n              </div>\n            </form>\n          </div>\n\n          <div id=\"list-wrapper\">\n            {tasks.map(function (task, index) {\n              return (\n                <div key={index} className=\"task-wrapper flex-wrapper\">\n\n                  <div style={{flex:7}}>\n                    <span>{task.title}</span>\n                  </div>\n\n                  <div style={{flex:1}}>\n                    <button onClick={() => self.startEdit(task)} className=\"btn btn-sm btn-outline-info\">Edit</button>\n                  </div>\n\n                  <div style={{flex:1}}>\n                    <button onClick={() => self.deleteItem(task)} className=\"btn btn-sm btn-outline-dark delete\">-</button>\n                  </div>\n                  \n                </div>\n              )\n            })}\n          </div>\n          \n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}